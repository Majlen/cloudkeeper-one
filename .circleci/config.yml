version: 2

config: &config
  working_directory: /root/working_directory
  docker:
    - image: ruby:2.5
    - image: majlen/cloudkeeper-tester:latest
    - image: majlen/opennebula:latest

jobs:
  build:
    <<: *config
    steps:
      - checkout
      - run:
          name: Pull submodules
          command: git submodule update --init --recursive
      - run:
          name: install bundler
          command: gem install bundler
      - run:
          name: install cloudkeeper-one
          command: bundle install
      - persist_to_workspace:
          root: /usr/local
          paths:
             - bundle
  test:
    <<: *config
    steps:
      - checkout
      - run:
          name: Pull submodules
          command: git submodule update --init --recursive
      - attach_workspace:
          at: /usr/local
      - run:
          name: run local tests
          command: bundle exec rake spec
      - run:
          name: run cloudkeeper-one
          # TODO: run as a service
          command: bundle exec bin/cloudkeeper-one sync --opennebula-endpoint=http://localhost:2633/RPC2 &
      - run:
          name: run cloudkeeper-tester
          command: |
            exec 3<> /dev/tcp/127.0.0.1/9876
            echo -ne "start" >&3
            while read -r line <&3; do echo "$line"; done
            exec 3>&-
            exec 3<&-

  build_upload:
    docker:
      - image: docker:stable
    working_directory: /root/working_directory
    steps:
      - run: apk add --no-cache git openssh
      - checkout
      - setup_remote_docker
      - run: |
          git config --global --replace-all versionsort.prereleasesuffix ".alpha"
          git config --global --add versionsort.prereleasesuffix ".beta"
      - run: |
          TAG=${CIRCLE_TAG#v}
          BRANCH=${TAG/%.*/.x}
          VERSION=${TAG}
          LATEST=$(git tag --sort=-version:refname | head -n 1)

          docker login -u $DOCKER_USER -p $DOCKER_PASS

          docker build --build-arg branch=$BRANCH --build-arg version="$VERSION" -t $DOCKERHUB_ORGANIZATION/$CIRCLE_PROJECT_REPONAME:$TAG ./$DOCKERFILE_DIR
          docker push $DOCKERHUB_ORGANIZATION/$CIRCLE_PROJECT_REPONAME:$TAG

          if [ "$LATEST" == "$CIRCLE_TAG" ]; then
            docker tag $DOCKERHUB_ORGANIZATION/$CIRCLE_PROJECT_REPONAME:$TAG $DOCKERHUB_ORGANIZATION/$CIRCLE_PROJECT_REPONAME:latest
            docker push $DOCKERHUB_ORGANIZATION/$CIRCLE_PROJECT_REPONAME:latest
          fi
workflows:
  version: 2
  build_test_release:
    jobs:
      - build
      - test:
          requires:
            - build
      - build_upload:
          requires:
            - test
          filters:
            tags:
              only: /v.*/
            branches:
              ignore: /.*/
